// <auto-generated />
using DesktopBeatLight.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesktopBeatLight.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesktopBeatLight.Core.Models.ThemeConfig", b =>
                {
                    b.Property<int>("ThemeConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ThemeConfigId"));

                    b.Property<string>("AccentColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Brightness")
                        .HasColumnType("integer");

                    b.Property<string>("GradientEndColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<int>("LightHeight")
                        .HasColumnType("integer");

                    b.Property<int>("LightPosition")
                        .HasColumnType("integer");

                    b.Property<int>("MuteBrightness")
                        .HasColumnType("integer");

                    b.Property<string>("MuteColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("PauseOnMute")
                        .HasColumnType("boolean");

                    b.Property<string>("PrimaryColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ThemeConfigId");

                    b.ToTable("ThemeConfigs");
                });
#pragma warning restore 612, 618
        }
    }
}
